{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst startBtn = document.querySelector('button');\nconst daysValue = document.querySelector('[data-days]');\nconst hoursValue = document.querySelector('[data-hours]');\nconst minValue = document.querySelector('[data-minutes]');\nconst secValue = document.querySelector('[data-seconds]');\nclass Timer {\n  constructor(convertMs, selectedDates) {\n    this.intervalId = null;\n    this.collectTime = convertMs;\n    this.selectedDates = selectedDates;\n  }\n  start() {\n    this.intervalId = setInterval(() => {\n      const diff = this.selectedDates - Date.now();\n      daysValue.textContent = padStart(this.collectTime(diff).days);\n      hoursValue.textContent = padStart(this.collectTime(diff).hours);\n      minValue.textContent = padStart(this.collectTime(diff).minutes);\n      secValue.textContent = padStart(this.collectTime(diff).seconds);\n      if (diff <= 0) {\n        clearInterval(this.intervalId);\n        daysValue.textContent = '00';\n        hoursValue.textContent = '00';\n        minValue.textContent = '00';\n        secValue.textContent = '00';\n      }\n    }, 1000);\n  }\n}\nstartBtn.addEventListener('click', () => {\n  timer.start();\n});\nfunction padStart(number) {\n  return number.toString().padStart(2, '0');\n}\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    timer.selectedDates = selectedDates[0];\n    if (timer.selectedDates < Date.now()) {\n      startBtn.setAttribute('disabled', true);\n      iziToast.show({\n        color: 'red',\n        position: 'center',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      startBtn.removeAttribute('disabled');\n    }\n  },\n};\nconst input = document.querySelector('#datetime-picker');\nflatpickr('#datetime-picker', options);\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\nconst timer = new Timer(convertMs);\n"],"names":["startBtn","daysValue","hoursValue","minValue","secValue","Timer","convertMs","selectedDates","diff","padStart","timer","number","options","iziToast","flatpickr","ms","days","hours","minutes","seconds"],"mappings":"0IAIA,MAAMA,EAAW,SAAS,cAAc,QAAQ,EAC1CC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAW,SAAS,cAAc,gBAAgB,EAClDC,EAAW,SAAS,cAAc,gBAAgB,EACxD,MAAMC,CAAM,CACV,YAAYC,EAAWC,EAAe,CACpC,KAAK,WAAa,KAClB,KAAK,YAAcD,EACnB,KAAK,cAAgBC,CACtB,CACD,OAAQ,CACN,KAAK,WAAa,YAAY,IAAM,CAClC,MAAMC,EAAO,KAAK,cAAgB,KAAK,IAAG,EAC1CP,EAAU,YAAcQ,EAAS,KAAK,YAAYD,CAAI,EAAE,IAAI,EAC5DN,EAAW,YAAcO,EAAS,KAAK,YAAYD,CAAI,EAAE,KAAK,EAC9DL,EAAS,YAAcM,EAAS,KAAK,YAAYD,CAAI,EAAE,OAAO,EAC9DJ,EAAS,YAAcK,EAAS,KAAK,YAAYD,CAAI,EAAE,OAAO,EAC1DA,GAAQ,IACV,cAAc,KAAK,UAAU,EAC7BP,EAAU,YAAc,KACxBC,EAAW,YAAc,KACzBC,EAAS,YAAc,KACvBC,EAAS,YAAc,KAE1B,EAAE,GAAI,CACR,CACH,CACAJ,EAAS,iBAAiB,QAAS,IAAM,CACvCU,EAAM,MAAK,CACb,CAAC,EACD,SAASD,EAASE,EAAQ,CACxB,OAAOA,EAAO,SAAU,EAAC,SAAS,EAAG,GAAG,CAC1C,CACA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQL,EAAe,CACrBG,EAAM,cAAgBH,EAAc,GAChCG,EAAM,cAAgB,KAAK,IAAG,GAChCV,EAAS,aAAa,WAAY,EAAI,EACtCa,EAAS,KAAK,CACZ,MAAO,MACP,SAAU,SACV,QAAS,oCACjB,CAAO,GAEDb,EAAS,gBAAgB,UAAU,CAEtC,CACH,EACc,SAAS,cAAc,kBAAkB,EACvDc,EAAU,mBAAoBF,CAAO,EACrC,SAASN,EAAUS,EAAI,CAKrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CACA,MAAMT,EAAQ,IAAIL,EAAMC,CAAS"}